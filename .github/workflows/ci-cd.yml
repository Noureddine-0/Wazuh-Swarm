---
name: Wazuh CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  lint:
    name: Lint YAML and Ansible
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Create Python venv
        run: |
          python3 -m venv venv
          source venv/bin/activate
          pip install --upgrade pip
          pip install yamllint ansible-lint

      - name: Install required Ansible collections
        run: |
          source venv/bin/activate
          ansible-galaxy collection install community.docker -p ./collections
        env:
          ANSIBLE_COLLECTIONS_PATH: ./collections

      - name: Run yamllint
        run: |
          source venv/bin/activate
          yamllint .

      - name: Run ansible-lint
        run: |
          source venv/bin/activate
          ansible-lint playbooks/
        env:
          ANSIBLE_COLLECTIONS_PATH: ./collections

      - name: Cleanup venv
        if: always()
        run: rm -rf ./ansible-lint-venv

  build:
    needs: lint
    runs-on: ${{ matrix.runner }}
    strategy:
      matrix:
        runner: [ubuntu-latest]
    env:
      WAZUH_API_PASSWORD: ${{ secrets.WAZUH_API_PASSWORD }}
      WAZUH_INDEXER_PASSWORD: ${{ secrets.WAZUH_INDEXER_PASSWORD }}
      WAZUH_DASHBOARD_PASSWORD: ${{ secrets.WAZUH_DASHBOARD_PASSWORD }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install docker-compose
        if: ${{ matrix.runner == 'ubuntu-latest' }}
        run: sudo apt-get update && sudo apt-get install -y docker-compose

      - name: Build wazuh images
        run: |
          chmod +x build-docker-images/build-images.sh
          ./build-docker-images/build-images.sh

  deploy-test:
    needs: build
    runs-on: ${{ matrix.runner }}
    strategy:
      matrix:
        runner: [ubuntu-latest]
    env:

      WAZUH_API_PASSWORD: ${{ secrets.WAZUH_API_PASSWORD }}
      WAZUH_INDEXER_PASSWORD: ${{ secrets.WAZUH_INDEXER_PASSWORD }}
      WAZUH_DASHBOARD_PASSWORD: ${{ secrets.WAZUH_DASHBOARD_PASSWORD }}
      ADMIN_CERT: ${{ secrets.ADMIN_CERT }}
      ADMIN_KEY: ${{ secrets.ADMIN_KEY }}
      DASHBOARD_CERT: ${{ secrets.DASHBOARD_CERT }}
      DASHBOARD_KEY: ${{ secrets.DASHBOARD_KEY }}
      INDEXER_CERT: ${{ secrets.INDEXER_CERT }}
      INDEXER_KEY: ${{ secrets.INDEXER_KEY }}
      MASTER_CERT: ${{ secrets.MASTER_CERT }}
      MASTER_KEY: ${{ secrets.MASTER_KEY }}
      WORKER_CERT: ${{ secrets.WORKER_CERT }}
      WORKER_KEY: ${{ secrets.WORKER_KEY }}
      ROOT_CA_CERT: ${{ secrets.ROOT_CA_CERT }}
      ROOT_CA_KEY: ${{ secrets.ROOT_CA_KEY }}
      ROOT_CA_MANAGER_CERT: ${{ secrets.ROOT_CA_MANAGER_CERT }}
      ROOT_CA_MANAGER_KEY: ${{ secrets.ROOT_CA_MANAGER_KEY }}
      NGINX_CERT: ${{ secrets.NGINX_CERT }}
      NGINX_KEY: ${{ secrets.NGINX_KEY }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Get runner IP
        run: |
          RUNNER_IP=$(ip route get 1.1.1.1 | awk '{for(i=1;i<=NF;i++){if($i=="src"){print $(i+1)}}}')
          echo "Runner IP is: $RUNNER_IP"
          echo "RUNNER_IP=$RUNNER_IP" >> $GITHUB_ENV
        shell: bash

      - name: Install Ansible
        if: ${{ matrix.runner == 'ubuntu-latest' }}
        run: sudo apt-get update && sudo apt-get install -y ansible

      - name: Set up Python venv for Ansible
        run: |
          python3 -m venv ansible-venv
          source ansible-venv/bin/activate
          pip install --upgrade pip setuptools wheel
          pip install requests docker jsondiff

      - name: Deploy to docker swarm via Ansible
        run: ansible-playbook playbooks/deploy-wazuh.yml

      - name: Cleanup Python venv
        if: always()
        run: |
          deactivate || true   # only works if shell is still inside venv
          rm -rf ansible-venv
          rm -rf ~/.cache/pip


      - name: Waiting for Wazuh Dashboard to be ready
        run: |
          echo "Waiting for Wazuh dashboard at https://$RUNNER_IP:443/app/login..."
          SLEEP_TIME=10
          while true; do
            RESPONSE=$(curl -k -s https://$RUNNER_IP:443/app/login)
            if [[ "$RESPONSE" != *"Wazuh dashboard server is not ready yet"* ]]; then
              echo "Wazuh dashboard is ready!"
              break
            fi
            echo "Dashboard not ready yet, waiting $SLEEP_TIME seconds..."
            sleep $SLEEP_TIME
          done
        shell: bash

      - name: Setup Python
        if: ${{ matrix.runner == 'ubuntu-latest' }}
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: setup selenium webdriver-manager
        run: |
          python3 -m venv selenium-env
          source selenium-env/bin/activate
          pip install --upgrade pip
          pip install selenium==4.35.0 webdriver-manager==4.0.2

      - name: Run Wazuh dashboard Selenium test
        run: |
          source selenium-env/bin/activate
          python3 test_wazuh.py
