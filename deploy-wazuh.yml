---
- name: Deploy Wazuh stack via Ansible
  hosts: localhost
  connection: local
  gather_facts: false
  vars:
    wazuh_api_password: "{{ lookup('env', 'WAZUH_API_PASSWORD') }}"
    wazuh_indexer_password: "{{ lookup('env', 'WAZUH_INDEXER_PASSWORD') }}"
    wazuh_dashboard_password: "{{ lookup('env', 'WAZUH_DASHBOARD_PASSWORD') }}"

  tasks:
    - name: Initialize Docker swarm
      ansible.builtin.shell: docker swarm init --advertise-addr 127.0.0.1 || true

    - name: Check if wazuh_api_password secret exists
      ansible.builtin.shell: docker secret ls --format '{{ "{{.Name}}" }}' | grep -w wazuh_api_password
      register: api_secret_check
      ignore_errors: true

    - name: Create wazuh_api_password secret
      ansible.builtin.shell: |
        echo  "{{ wazuh_api_password }}" | docker secret create wazuh_api_password -
      when: api_secret_check.rc != 0

    - name: Check if wazuh_indexer_password secret exists
      ansible.builtin.shell: docker secret ls --format '{{ "{{.Name}}" }}' | grep -w wazuh_indexer_password
      register: indexer_secret_check
      ignore_errors: true

    - name: Create wazuh_indexer_password secret
      ansible.builtin.shell: |
        echo  "{{ wazuh_indexer_password }}" | docker secret create wazuh_indexer_password -
      when: indexer_secret_check.rc != 0

    - name: Check if wazuh_dashboard_password secret exists
      ansible.builtin.shell: docker secret ls --format '{{ "{{.Name}}" }}' | grep -w wazuh_dashboard_password
      register: dashboard_secret_check
      ignore_errors: true

    - name: Create wazuh_dashboard_password secret
      ansible.builtin.shell: |
        echo  "{{ wazuh_dashboard_password }}" | docker secret create wazuh_dashboard_password -
      when: dashboard_secret_check.rc != 0

    - name: Remove old Wazuh stack if it exists
      ansible.builtin.shell: docker stack rm wazuh || true

    - name: Deploy Wazuh stack
      shell: docker stack deploy -c stack.yml wazuh

    - name: Wait for API to be ready
      ansible.builtin.shell: |
        echo "Waiting for Wazuh services to be healthy..."
        until curl -k -s https://127.0.0.1:443/api >/dev/null; do
              
          echo "Waiting..."
          sleep 10
        done
        echo "Wazuh stack is ready"